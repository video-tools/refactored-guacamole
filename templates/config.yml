project:
    'testing':
        alpine: '3.7'
    'stable':
        alpine: '3.7'
    'legacy':
        alpine: '3.7'
    'snapshot':
        alpine: '3.7'

libraries:
  x264:
    url: https://www.videolan.org/developers/x264.html
    versions:
      last_stable:
          project:
          - 'snapshot'
          blacklist:
          - 'centos:centos7'
      20180210-2245-stable:
          project:
          - 'testing'
          blacklist:
          - 'centos:centos7'
      20171104-2245-stable: 
          project:
          - 'testing'
          - 'stable'
          - 'legacy'
    buildscript: |
        if echo ${X264_VERSION} | grep -q '^last'; then \
            curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/${X264_VERSION}_x264.tar.bz2 | tar -jx --strip-components=1 ; \
        else \
            curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | tar -jx --strip-components=1 ; \
        fi ; \
            ./configure --prefix="${PREFIX}" --enable-shared --enable-pic ; \
        make ; \
        make install
  x265:
    url: https://bitbucket.org/multicoreware/x265/wiki/Home
    versions:
      '2.8':
        md5sum: b68dcd4e8a495e53e53034a11fec5eb9
      '2.7':
        md5sum: b0d7d20da2a418fa4f53a559946ea079
      '2.6':
        md5sum: 4d318be1f19b58985432a144bd054572
      '2.5':
        md5sum: 192e54fa3068b594aa44ab2b70stable71d
    buildscript: |
        curl -sLO https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz ; \
        echo "${X265_MD5SUM}  x265_${X265_VERSION}.tar.gz" | md5sum --check ; \
        tar -zx --strip-component=1 -f x265_${X265_VERSION}.tar.gz ; \
        cd build/linux ; \
        sed -i "/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\${PREFIX}/" multilib.sh ; \
        sed -i "/^cmake/ s/$/ -DENABLE_CLI=ON/" multilib.sh ; \
        ./multilib.sh ; \
        make -C 8bit install
  opencoreamr:
    url: https://sourceforge.net/projects/opencore-amr/
    versions:
      0.1.5:
        sha1sum: bef4d1e3a8a155b47569b6691a223843b33e279e
      0.1.4:
        sha1sum: 905cce84963a241dc058fb42357259952ce2e4ab
    buildscript: |
        curl -sLO https://superb-sea2.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz ; \
        echo "${OPENCOREAMR_SHA1SUM}  opencore-amr-${OPENCOREAMR_VERSION}.tar.gz" | \
        sha1sum --check ; \
        tar -zx --strip-components=1 -f opencore-amr-${OPENCOREAMR_VERSION}.tar.gz ; \
        ./configure --prefix="${PREFIX}" --enable-shared ; \
        make ; \
        make install
  ogg:
    url: https://xiph.org/ogg/
    versions:
      1.3.3:
        sha256sum: c2e8a485110b97550f453226ec644ebac6cb29d1caef2902c007edab4308d985
      1.3.2:
        sha256sum: e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692
    dependents:
    - vorbis
    buildscript: |
        curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz ; \
        echo "${OGG_SHA256SUM}  libogg-${OGG_VERSION}.tar.gz" ; \
        echo "${OGG_SHA256SUM}  libogg-${OGG_VERSION}.tar.gz" | sha256sum --check ; \
        tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz ; \
        ./configure --prefix="${PREFIX}" --enable-shared ; \
        make ; \
        make install
  opus:
    url: https://www.opus-codec.org
    versions:
      1.2.1:
        sha256sum: cfafd339ccd9c5ef8d6ab15d7e1a412c054bf4cb4ecbbbcc78c12ef2def70732
    buildscript: |
      curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz ; \
      echo "${OPUS_SHA256SUM}  opus-${OPUS_VERSION}.tar.gz" | sha256sum --check  ; \
      tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz ; \
      autoreconf -fiv ; \
      ./configure --prefix="${PREFIX}" --enable-shared ; \
      make ; \
      make install
  openjpeg:
    url: http://www.openjpeg.org
    versions:
       2.3.0:
           project:
               - 'snapshot'
               - 'testing'
       2.1.2: 
            project:
                - 'stable'
       ersion.1.5.2:
           project:
                - 'legacy'
    buildscript: |
      curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
      tar -zx --strip-components=1 ; \
      cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX="${PREFIX}" . ; \
      make ; \
      make install
  fdkaac:
    url: https://github.com/mstorsjo/fdk-aac
    versions:
      0.1.6:
      0.1.5: 
    buildscript: |
      curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
      tar -zx --strip-components=1 ; \
      autoreconf -fiv ; \
      ./configure --prefix="${PREFIX}" --enable-shared --datadir="${PWD}" ; \
      make ; \
      make install
  lame:
    url: http://lame.sourceforge.net
    versions:
      '3.100': 
    buildscript: |
      curl -sL https://cfhcable.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz | \
      tar -zx --strip-components=1 ; \
      ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --enable-pic --enable-frontend ; \
      make ; \
      make install
  ass:
    url: https://github.com/libass/libass
    versions:
      0.14.0:
      0.13.7:
    buildscript: |
      curl -sLO https://github.com/libass/libass/archive/${ASS_VERSION}.tar.gz ; \
      tar -zx --strip-components=1 -f ${ASS_VERSION}.tar.gz ; \
      ./autogen.sh ; \
      ./configure -prefix="${PREFIX}" --disable-static --enable-shared ; \
      make ; \
      make install
  theora:
    url: https://www.theora.org
    versions:
      1.1.1:
        sha256sum: 40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b
    buildscript: |
      curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz ; \
      echo "${THEORA_SHA256SUM}  libtheora-${THEORA_VERSION}.tar.gz"| sha256sum --check ; \
      tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz ; \
      sed -i 's/png_\(sizeof\)/\1/g' examples/png2theora.c ; \
      ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared ; \
      make ; \
      make install
  vorbis:
    url: https://www.vorbis.org
    versions:
      1.3.6:
        sha256sum: 6ed40e0241089a42c48604dc00e362beee00036af2d8b3f46338031c9e0351cb
      1.3.5:
        sha256sum: 6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce
    buildscript: |
      curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz ; \
      echo "${VORBIS_SHA256SUM}  libvorbis-${VORBIS_VERSION}.tar.gz" | sha256sum --check  ; \
      tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz ; \
      ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared ; \
      make ; \
      make install
  vpx:
    url: https://www.webmproject.org
    versions:
      1.7.0:
      1.6.1: 
    buildscript: |
      curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
      tar -zx --strip-components=1 ; \
      ./configure --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-pic --enable-shared \
      --disable-debug --disable-examples --disable-docs --enable-install-bins ; \
      make ; \
      make install
  xvid:
    url: https://www.xvid.com
    versions:
      1.3.5:
      1.testing:
    buildscript: |
      curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz ; \
      tar -zx -f xvidcore-${XVID_VERSION}.tar.gz ; \
      cd xvidcore/build/generic ; \
      ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --datadir="${PWD}" --enable-shared ; \
      make ; \
      make install
  vidstab:
    url: https://github.com/georgmartius/vid.stab
    versions:
      1.1.0:
        sha256sum: 14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb
    buildscript: |
      curl -sLO https://github.com/georgmartius/vid.stab/archive/v${VIDSTAB_VERSION}.tar.gz ; \
      echo "${VIDSTAB_SHA256SUM}  v${VIDSTAB_VERSION}.tar.gz" | sha256sum --check  ; \
      tar -zx --strip-components=1 -f v${VIDSTAB_VERSION}.tar.gz ; \
      cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" . ; \
      make ; \
      make install
  kvazaar:
    url: https://github.com/ultravideo/kvazaar
    versions:
      1.2.0: 
        project:
            - 'snapshot'
            - 'testing'
            - 'stable'
      0.6.1:
        project:
            - 'legacy'
    buildscript: |
      curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz ; \
      tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz ; \
      if [ $KVAZAAR_VERSION != '0.6.1' ]; then \
      ./autogen.sh ; \
      ./configure -prefix="${PREFIX}" --disable-static --enable-shared ; \
      else \
      cd src ; \
      fi ;\
      make ; \
      make PREFIX=${PREFIX} install
  aom:
    url: https://aomedia.googlesource.com/aom/+archive/master.tar.gz/
    versions:
      master:
        project:
          - 'snapshot'
      v1.0.0:
        project:
          - 'snapshot'
          - 'testing'
      v0.1.0:
        project:
          - 'snapshot'
          - 'testing'
    buildscript: |
        curl -sLO https://aomedia.googlesource.com/aom/+archive/${AOM_VERSION}.tar.gz ; \
        tar -zx -f ${AOM_VERSION}.tar.gz ; \
        rm -rf CMakeCache.txt CMakeFiles ; \
        mkdir -p ../aom_build ; \
        cd ../aom_build ; \ 
        cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" -DBUILD_SHARED_LIBS=1 ../aom; \
        make ; \
        make install

